{"remainingRequest":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thien/Documents/Tutorials/NodeJs/audio/src/views/partials/Chapters.vue?vue&type=style&index=0&id=10e56019&lang=scss&scoped=true&","dependencies":[{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/src/views/partials/Chapters.vue","mtime":1579752310000},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/css-loader/dist/cjs.js","mtime":1596448973331},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1604375615900},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/postcss-loader/src/index.js","mtime":1596448991023},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/sass-loader/dist/cjs.js","mtime":1604042835268},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/cache-loader/dist/cjs.js","mtime":1601544776771},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/index.js","mtime":1604375615900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnN3aXRjaC1wYWdlIHsNCiAgICB3aWR0aDogMTIwcHg7DQogICAgbWFyZ2luOiBhdXRvOw0KfQ0K"},{"version":3,"sources":["Chapters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;AACA","file":"Chapters.vue","sourceRoot":"src/views/partials","sourcesContent":["<template>\r\n<div class=\"chapter-wrapper\" :class=\"{'dialog': dialog}\">\r\n    <div class=\"title_wrapper\">\r\n        <div class=\"title\">Truyện có {{this.chapters.length}} chương: </div>\r\n    </div>\r\n    <loading-icon w=\"64\" margin=\"40px auto 0\" v-if=\"loading\"></loading-icon>\r\n    <div class=\"chapter-container relative\" v-if=\"!loading\">\r\n        <v-tooltip top v-for=\"(item, i) in showChapters\" :key=\"`chapter-${now}-${i}`\" :id=\"`chapter-${now}-${i}`\">\r\n            <template v-slot:activator=\"{ on }\">\r\n                <div v-on=\"on\" class=\"chapter-item text-truncate\" :id=\"`js-chapter-${now}-${i}`\" :class=\"{'chapter-divider' : item.type == 'divider', active: current == Number(item.chapterId)}\" :chap=\"item.chapterId\" @click=\"toChapter(item)\">\r\n                    {{item.title}}\r\n\r\n                </div>\r\n            </template>\r\n            <span>{{item.title}}</span>\r\n        </v-tooltip>\r\n\r\n    </div>\r\n    <div v-if=\"!loading && responsive > 1\">\r\n\r\n        <div class=\"mt-8 switch-page relative\">\r\n            <v-tooltip top>\r\n                <template v-slot:activator=\"{ on }\">\r\n                    <v-text-field v-on=\"on\" class=\"no-hint\" value=\"1\" @keyup=\"checkNumber($event)\" @blur=\"checkNumber($event)\" @click=\"checkNumber($event)\" @change=\"checkNumber($event)\" id=\"switch_page\" solo outlined dense flat append-icon=\"mdi-hand-pointing-right\" v-on:click:append=\"goPage()\" />\r\n                </template>\r\n                <span>Go Page</span>\r\n            </v-tooltip>\r\n        </div>\r\n        <v-pagination v-model=\"page\" class=\"mt-2 mb-6 small\" total-visible=\"8\" circle :length=\"getLength()\"></v-pagination>\r\n    </div>\r\n    <div class=\"pagination mt-6 py-3\" v-if=\"!loading && responsive == 1\">\r\n        <span class=\"pagination-title mr-1 fs-14\">Chọn khoảng: </span>\r\n        <v-chip class=\"tb-chip-small mr-1\" color=\"green\" v-for=\"(num, i) in Math.ceil(this.chapters.length / 75)\" :key=\"`pagination-${now}-${i}`\" @click=\"page = num\">\r\n            {{(num - 1) * 75 + 1}} - {{num * 75}}\r\n        </v-chip>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    mapMutations,\r\n    mapState\r\n} from 'vuex';\r\nexport default {\r\n    props: {\r\n        story_id: {\r\n            type: Number\r\n        },\r\n        story_url: {\r\n            type: String\r\n        },\r\n        current: {\r\n            type: Number,\r\n            default: -1,\r\n            required: false\r\n        },\r\n        dialog: {\r\n            type: Boolean,\r\n            default: false,\r\n            required: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            loading: true,\r\n            chapters: [],\r\n            showChapters: [],\r\n            now: Date.now(),\r\n            page: 1\r\n        }\r\n    },\r\n    created() {\r\n        this.init();\r\n\r\n    },\r\n    watch: {\r\n        page: function (val) {\r\n            if(val <= 0) this.page = 1;\r\n            this.getShowChapter();\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('app', ['responsive'])\r\n    },\r\n    methods: {\r\n        init: function () {\r\n            this.loading = true;\r\n\r\n            this.$axios.get('/story/chapter', {\r\n                    params: {\r\n                        storyId: this.story_id\r\n                    }\r\n                })\r\n                .then(rs => {\r\n                    let {\r\n                        data\r\n                    } = rs;\r\n\r\n                    this.chapters = data.data;\r\n\r\n                    if (this.current != -1) {\r\n                        let index = this.chapters.findIndex(it => it.chapterId == this.current);\r\n\r\n                        this.page = Math.ceil(index / 75);\r\n\r\n                        let that = this;\r\n\r\n\r\n                        setTimeout(() => {\r\n                            \r\n                            if ($(`[chap=${that.chapters[index].chapterId}]`).length != 0) {\r\n\r\n                                $('#js-dialog-chapter-content').animate({\r\n                                    scrollTop: $(`[chap=${that.chapters[index].chapterId}]`).position().top - 100\r\n                                }, 100);\r\n                            }\r\n                        }, 200);\r\n                    }\r\n\r\n                    this.getChapter();\r\n\r\n                    this.getShowChapter();\r\n\r\n                    this.loading = false;\r\n\r\n                })\r\n\r\n        },\r\n        getShowChapter: function () {\r\n\r\n            let sIndex = (this.page - 1) * 75;\r\n            let eIndex = this.page * 75;\r\n\r\n            this.showChapters = [...this.chapters.slice(sIndex, eIndex)];\r\n\r\n        },\r\n\r\n        getLength: function () {\r\n            let length = Math.ceil(this.chapters.length / 75);\r\n            return length > 0 ? length : 1;\r\n        },\r\n        checkNumber: function ($event) {\r\n            let elem = document.getElementById('switch_page');\r\n\r\n            if (!/\\d+/gi.test($event.key)) {\r\n                if (elem.value.length == 0) elem.value = 0;\r\n            }\r\n            elem.value = parseInt(elem.value);\r\n            if (parseInt(elem.value) > this.chapters.length) {\r\n                elem.value = this.chapters.length;\r\n            }\r\n            if (parseInt(elem.value) < 0) {\r\n                elem.value = 0;\r\n            }\r\n\r\n            if ($event.key == 'Enter') {\r\n                this.goPage();\r\n            }\r\n\r\n        },\r\n        goPage: function () {\r\n            let elem = document.getElementById('switch_page');\r\n            let p = Number(parseInt(elem.value));\r\n\r\n            let chapId = this.chapters[p - 1].chapterId;\r\n\r\n            p = Math.ceil(p / 75);\r\n            this.page = p > this.getLength() ? this.getLength() : p;\r\n\r\n            setTimeout(() => {\r\n                $('#js-dialog-chapter-content').animate({\r\n                    scrollTop: $(`[chap=${chapId}]`).position().top\r\n                }, 100);\r\n            }, 200);\r\n\r\n        },\r\n        toChapter: function (item) {\r\n\r\n            if (item.type == 'divider') return;\r\n            this.$router.push(`/read/story/${this.story_url}/${item.href}/${item.chapterId}`);\r\n        },\r\n        getChapter: function () {\r\n            this.$emit('getChapter', this.chapters);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.switch-page {\r\n    width: 120px;\r\n    margin: auto;\r\n}\r\n</style>\r\n"]}]}