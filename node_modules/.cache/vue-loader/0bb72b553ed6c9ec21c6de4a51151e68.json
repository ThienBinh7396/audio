{"remainingRequest":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thien/Documents/Tutorials/NodeJs/audio/src/views/pages/ContentChapterRsV.vue?vue&type=style&index=0&id=29a6f62c&lang=scss&scoped=true&","dependencies":[{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/src/views/pages/ContentChapterRsV.vue","mtime":1604377237427},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/css-loader/dist/cjs.js","mtime":1596448973331},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1604375615900},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/postcss-loader/src/index.js","mtime":1596448991023},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/sass-loader/dist/cjs.js","mtime":1604042835268},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/cache-loader/dist/cjs.js","mtime":1601544776771},{"path":"/home/thien/Documents/Tutorials/NodeJs/audio/node_modules/vue-loader/lib/index.js","mtime":1604375615900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRpdGxlIHsNCiAgICBjb2xvcjogIzRmOWJkMjsNCn0NCg0KLmNoYXB0ZXIgLmNoYXB0ZXItY29udGVudCBwIHsNCiAgICBmb250LXNpemU6IDI0cHg7DQogICAgY29sb3I6ICNkZmRmZGY7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouY2hhcHRlciAuY2hhcHRlci1jb250ZW50IHAuYWN0aXZlIHsNCiAgICBiYWNrZ3JvdW5kOiAjMmU2MzhhOw0KICAgIGNvbG9yOiAjZmZmOw0KfQ0K"},{"version":3,"sources":["ContentChapterRsV.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsXA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ContentChapterRsV.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\r\n<v-row>\r\n    <v-col cols=\"12\">\r\n        <loading-icon w=\"82\" margin=\"160px auto 0\" v-if=\"loading\"></loading-icon>\r\n        <loading-circular-dialog :show=\"loadingNewChapter\" />\r\n\r\n        <div class=\"dialog-chapter\" :class=\"{show: dialog}\" v-if=\"!loading\">\r\n            <div class=\"dialog-chapter-overplay\" @click=\"dialog = false\" />\r\n            <v-card class=\"dialog-chapter-content\">\r\n                <chapter :dialog=\"true\" @getChapter=\"getChapters\" :current=\"Number(chapter_id)\" :story_id=\"storyInfo.id\" :story_url=\"storyInfo.url_story\" />\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"chapter px-0 px-md-5 px-lg-10\" v-if=\"!loading\">\r\n            <h1 class=\"mt-2 text-center\">{{storyInfo.title_story}}</h1>\r\n            <div class=\"title text-center\">{{storyInfo.chapter}}</div>\r\n            <div>{{pageVisibilitys}}</div>\r\n\r\n            <div class=\"chapter-content mt-12 mb-12\">\r\n                <p :class=\"{active: reading && index == currentLine }\" @click=\"startSpeakLine(index)\" class=\"px-3\" v-for=\"(line, index) in storyInfo.content\" :key=\"`line-${index}`\" :id=\"`js-line-${index}`\" v-html=\"line\">\r\n                </p>\r\n            </div>\r\n            <div class=\"control-box d-flex justify-space-between px-6  mt-4 mb-12\">\r\n                <v-btn outlined @click=\"prevChapter()\" v-if=\"getIndex() != 0\">\r\n                    <v-icon class=\"mr-1\">mdi-arrow-left</v-icon>\r\n                    Previous\r\n                </v-btn>\r\n                <v-btn outlined @click=\"nextChapter()\" v-if=\"getIndex() != chapters.length - 1\">\r\n                    Next\r\n                    <v-icon class=\"ml-1\">mdi-arrow-right</v-icon>\r\n                </v-btn>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"button-action-group\">\r\n            <div class=\"button-action-scroll mb-3\">\r\n                <v-tooltip left>\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <transition name=\"slide\" mode=\"out-in\">\r\n                            <v-btn color=\"#F44336\" small dark fab v-on=\"on\" @click=\"scrollToTop()\">\r\n                                <v-icon class=\"ld ld-jump\" :class=\"{'mt-1': scrollTop <= 180 }\">{{scrollTop > 180 ? 'mdi-chevron-up' : 'mdi-chevron-down'}}</v-icon>\r\n                            </v-btn>\r\n                        </transition>\r\n                    </template>\r\n                    <span>Về đầu trang</span>\r\n                </v-tooltip>\r\n            </div>\r\n            <div class=\"button-action-dialog mb-6\">\r\n                <v-tooltip left>\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <transition name=\"slide\" mode=\"out-in\">\r\n                            <v-btn color=\"orange\" small dark fab v-on=\"on\" @click=\"dialog = true\">\r\n                                <v-icon>mdi-format-list-bulleted</v-icon>\r\n                            </v-btn>\r\n                        </transition>\r\n                    </template>\r\n                    <span>Danh sách chương</span>\r\n                </v-tooltip>\r\n            </div>\r\n            <div class=\"button-action-read\">\r\n                <v-tooltip left>\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <transition name=\"slide\" mode=\"out-in\">\r\n                            <v-btn class=\"size-default \" :color=\"reading ? 'black': 'blue darken-2'\" dark fab v-on=\"on\" @click=\"startSpeak()\">\r\n                                <radio-gif width=\"32\" v-if=\"reading\" style=\"margin-right: -2px; margin-top: -2px\" />\r\n                                <v-icon v-if=\"!reading\">mdi-headphones-settings</v-icon>\r\n                            </v-btn>\r\n                        </transition>\r\n                    </template>\r\n                    <span>{{ reading ? 'Pause' : 'Listen'}}</span>\r\n                </v-tooltip>\r\n            </div>\r\n        </div>\r\n\r\n    </v-col>\r\n</v-row>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    mapActions,\r\n    mapMutations\r\n} from 'vuex';\r\n\r\nexport default {\r\n    components: {\r\n        Chapter: () =>\r\n            import('@/views/partials/Chapters'),\r\n    },\r\n    data() {\r\n        return {\r\n            dialog: false,\r\n            story_url: '',\r\n            chapter_url: '',\r\n            chapter_id: -1,\r\n            storyInfo: {},\r\n            chapters: [],\r\n            loading: false,\r\n            loadingNewChapter: false,\r\n            currentLine: 0,\r\n            reading: false,\r\n            voice: 'Vietnamese Female',\r\n            scrollTop: 0,\r\n            first: true,\r\n            pageVisibility: true,\r\n            pageVisibilitys: []\r\n        }\r\n    },\r\n    created() {\r\n        this.init();\r\n\r\n    },\r\n    watch: {\r\n        $route: function (val) {\r\n            this.dialog = false;\r\n\r\n            this.init();\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations('app', ['setNav']),\r\n        ...mapActions('app', ['showToast']),\r\n        init: function () {\r\n            let {\r\n                story_url,\r\n                chapter_url,\r\n                chapter_id\r\n            } = this.$route.params;\r\n\r\n            this.story_url = story_url;\r\n            this.chapter_url = chapter_url;\r\n            this.chapter_id = chapter_id;\r\n\r\n            this.loading = true;\r\n            this.loadContent();\r\n        },\r\n        loadContent: function () {\r\n            this.$axios.get(`/story/read`, {\r\n                    params: {\r\n                        story_url: this.story_url,\r\n                        chapter_url: this.chapter_url\r\n                    }\r\n                })\r\n                .then(rs => {\r\n                    let {\r\n                        data\r\n                    } = rs;\r\n\r\n                    this.loading = false;\r\n                    this.loadingNewChapter = false;\r\n\r\n                    let contents = data.data.content.split(/\\n+/);\r\n\r\n                    data.data.content = contents;\r\n\r\n                    this.storyInfo = data.data;\r\n                    this.currentLine = 0;\r\n\r\n                    this.setNav([{\r\n                            path: '/',\r\n                            text: 'Trang chủ'\r\n                        },\r\n                        {\r\n                            path: `/story/${this.storyInfo.url_story}/${this.storyInfo.id}`,\r\n                            text: this.storyInfo.title_story\r\n                        },\r\n                        {\r\n                            path: ``,\r\n                            text: this.storyInfo.chapter\r\n                        },\r\n\r\n                    ])\r\n\r\n                    window.history.replaceState({}, \"\", `/read/story/${this.story_url}/${this.chapter_url}/${this.chapter_id}`);\r\n\r\n                    this.scrollToTop(true);\r\n\r\n                    if (this.reading) this.speak();\r\n                })\r\n        },\r\n        select: function () {\r\n            let selectText = '';\r\n\r\n            if (window.getSelection) {\r\n                console.log(window.getSelection);\r\n                selectText = window.getSelection().toString();\r\n            } else if (document.selection) {\r\n                console.log(document.selection);\r\n                selectText = document.selection.createRange().text;\r\n            }\r\n\r\n            if (selectText.length != 0) {\r\n                this.speak(selectText, false);\r\n            }\r\n\r\n        },\r\n        startSpeak: function () {\r\n            this.reading = !this.reading;\r\n\r\n            if (this.reading) {\r\n                if (this.first) {\r\n                    this.first = false;\r\n\r\n                    this.speak();\r\n\r\n                } else {\r\n\r\n                    responsiveVoice.resume();\r\n                }\r\n\r\n            } else {\r\n                responsiveVoice.pause();\r\n\r\n            }\r\n        },\r\n\r\n        speak: function () {\r\n            responsiveVoice.cancel();\r\n\r\n            if (this.storyInfo.content[this.currentLine].trim() == \"\") {\r\n                this.next();\r\n                return;\r\n            }\r\n\r\n            if (!this.pageVisibility) {\r\n                responsiveVoice.speak('Hello!', this.voice, {\r\n                    volume: 0\r\n                });\r\n                responsiveVoice.resume();\r\n            }\r\n\r\n            responsiveVoice.speak(this.storyInfo.content[this.currentLine], this.voice, {\r\n                rate: 1.3,\r\n                onstart: () => {\r\n                    this.scrollText();\r\n                },\r\n                onerror: (err) => {\r\n                    responsiveVoice.cancel();\r\n                    console.log(err);\r\n                },\r\n                onend: () => {\r\n                    this.next();\r\n                }\r\n            });\r\n        },\r\n        startSpeakLine: function (index) {\r\n            if (this.reading) {\r\n                this.currentLine = index;\r\n                this.speak();\r\n            }\r\n        },\r\n        next: function () {\r\n            this.currentLine++;\r\n\r\n            if (this.currentLine == this.storyInfo.content.length) {\r\n                console.log('End chapter');\r\n\r\n                this.nextChapter();\r\n\r\n                return;\r\n            }\r\n\r\n            this.speak();\r\n        },\r\n\r\n        nextChapter: function () {\r\n            this.loadingNewChapter = true;\r\n\r\n            if (this.chapters.length == 0) {\r\n                this.showToast({\r\n                    type: 'info',\r\n                    text: 'Chương cuối!'\r\n                });\r\n\r\n                this.loadingNewChapter = false;\r\n                return;\r\n            }\r\n            let index = this.getIndex();\r\n\r\n            if (index != this.chapters.length - 1) {\r\n                this.chapter_id = this.chapters[index + 1].chapterId;\r\n                this.chapter_url = this.chapters[index + 1].href;\r\n\r\n                this.loadContent();\r\n            } else {\r\n                this.showToast({\r\n                    type: 'info',\r\n                    text: 'Chương cuối!'\r\n                })\r\n            }\r\n            console.log(this.chapter_id, index);\r\n\r\n        },\r\n        prevChapter: function () {\r\n            this.loadingNewChapter = true;\r\n\r\n            if (this.chapters.length == 0) {\r\n                this.showToast({\r\n                    type: 'info',\r\n                    text: 'Chương cuối!'\r\n                });\r\n\r\n                this.loadingNewChapter = false;\r\n                return;\r\n            }\r\n            let index = this.getIndex();\r\n\r\n            if (index != 0) {\r\n                this.chapter_id = this.chapters[index - 1].chapterId;\r\n                this.chapter_url = this.chapters[index - 1].href;\r\n\r\n                this.loadContent();\r\n            } else {\r\n                this.showToast({\r\n                    type: 'info',\r\n                    text: 'Chương đầu tiên. Không thể trở về!'\r\n                })\r\n            }\r\n            console.log(this.chapter_id, index);\r\n\r\n        },\r\n        scrollText: function () {\r\n\r\n            let objDiv = document.getElementById(`js-line-${this.currentLine}`);\r\n            if (!objDiv) return;\r\n\r\n            app.scrollTop = objDiv.offsetTop - 200;\r\n        },\r\n        scrollToTop: function (onlyTop) {\r\n            let app = document.getElementById(`app`);\r\n            if (onlyTop) {\r\n                app.scrollTop = 0;\r\n                return;\r\n            }\r\n\r\n            let height = document.getElementById(`main-content`).offsetHeight;\r\n            app.scrollTop = this.scrollTop > 180 ? 0 : height;\r\n\r\n        },\r\n        getChapters: function (chaps) {\r\n            this.chapters = chaps;\r\n        },\r\n        getIndex: function () {\r\n            return this.chapters.findIndex(it => it.chapterId == this.chapter_id);\r\n        }\r\n    },\r\n    mounted() {\r\n        responsiveVoice.speak('Hello!', this.voice, {\r\n            volume: 0\r\n        });\r\n\r\n        let app = document.getElementById('app');\r\n\r\n        app.addEventListener('scroll', () => {\r\n            this.scrollTop = app.scrollTop;\r\n        })\r\n\r\n        window.addEventListener('keyup', (event) => {\r\n            if (event.keyCode == 37) {\r\n                this.prevChapter();\r\n            }\r\n            if (event.keyCode == 39) {\r\n                this.nextChapter();\r\n            }\r\n        })\r\n\r\n    },\r\n    destroyed() {\r\n        responsiveVoice.cancel();\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.title {\r\n    color: #4f9bd2;\r\n}\r\n\r\n.chapter .chapter-content p {\r\n    font-size: 24px;\r\n    color: #dfdfdf;\r\n    cursor: pointer;\r\n}\r\n\r\n.chapter .chapter-content p.active {\r\n    background: #2e638a;\r\n    color: #fff;\r\n}\r\n</style>\r\n"]}]}